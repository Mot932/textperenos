To display error messages in separate message boxes, you can use the `messagebox` module from `tkinter`. Here's how you can modify your code to show error messages in message boxes:

1. Import the `messagebox` module at the beginning of your code:

```python
import tkinter as tk
from tkinter import colorchooser, filedialog, messagebox  # Add messagebox import
from tkinter import ttk
from PIL import Image
import analiz

# ... (rest of your code)
```

2. Modify the `run()` function to show an error message in case the file is not selected:

```python
def run():
    pos_list = []
    if noun_var.get():
        pos_list.append('NOUN')
    if verb_var.get():
        pos_list.append('VERB')

    if file_path:
        analyzer = analiz.TextAnalyser(
            file_name=file_path,
            pos_list=pos_list,
            chislo=int(entry.get()),
            background=color[1],
            width=int(entry2.get()),
            height=int(entry3.get())
        )

        for i, word in enumerate(analyzer.process_words()):  # Replace with a method to process words
            # Update the progress bar
            progress['value'] = (i + 1) / total_words * 100
            window.update_idletasks()

        progress['value'] = 100  # Set progress bar to 100% when done
    else:
        messagebox.showerror("Ошибка", "Выберите файл перед запуском анализатора")  # Show error message in a messagebox
```

Now, when the user clicks the "сделать вордклауд" button without selecting a file, it will display an error message in a separate messagebox.```

In this code, I've added try-except blocks around the critical sections of your code that may raise exceptions (e.g., opening an image or running the text analyzer). This will help catch and handle errors gracefully, displaying error messages in the console without crashing the application.
