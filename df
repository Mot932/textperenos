To handle errors in your tkinter code using the filedialog, you can consider implementing error handling for scenarios where the user doesn't select a file before running the analyzer. You can also add error handling for other potential issues. Here's an updated version of your code with error handling:

```python
import tkinter as tk
from tkinter import colorchooser, filedialog
from tkinter import ttk  # Import ttk for the progress bar
from PIL import Image
import analiz

color = ""
file_path = ""
png_path = "wordcloud.png"

def show_color_picker():
    global color
    color = colorchooser.askcolor(title="Выберите цвет")
    if color[1]:
        print("Выбранный цвет:", color[1])

def select_file():
    global file_path
    file_path = filedialog.askopenfilename(title="Выберите файл")
    if file_path:
        print("Выбранный файл:", file_path)

def open_image():
    global png_path
    if png_path:
        try:
            image = Image.open(png_path)
            image.show()
        except Exception as e:
            print("Ошибка при открытии изображения:", str(e))

def run():
    pos_list = []
    if noun_var.get():
        pos_list.append('NOUN')
    if verb_var.get():
        pos_list.append('VERB')

    if file_path:
        try:
            analyzer = analiz.TextAnalyser(
                file_name=file_path,
                pos_list=pos_list,
                chislo=int(entry.get()),
                background=color[1],
                width=int(entry2.get()),
                height=int(entry3.get())
            )

            for i, word in enumerate(analyzer.process_words()):  # Replace with a method to process words
                # Update the progress bar
                progress['value'] = (i + 1) / total_words * 100
                window.update_idletasks()

            progress['value'] = 100  # Set progress bar to 100% when done
        except Exception as e:
            print("Ошибка при запуске анализатора:", str(e))
    else:
        print("Выберите файл перед запуском анализатора")

window = tk.Tk()
window.title("Анализатор текста 0.6 Beta")

# ... (rest of your code remains unchanged)
```

In this code, I've added try-except blocks around the critical sections of your code that may raise exceptions (e.g., opening an image or running the text analyzer). This will help catch and handle errors gracefully, displaying error messages in the console without crashing the application.
